{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lior/FInal_PRO Intel/IntelProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component, Injectable } from '@angular/core';\nimport { Resume_model } from 'src/app/Models/Resume_model';\nlet GasfailedComponent = class GasfailedComponent {\n  constructor(S, Resume, route) {\n    this.S = S;\n    this.Resume = Resume;\n    this.route = route;\n    this.GasFailed_List = [];\n    this.StopMouseEnterAlarm = false;\n    this.IfSave = false;\n    this.dt = new Date();\n    this.ResumeToTask = new Resume_model();\n  }\n\n  ngOnInit() {\n    this.GasFailed_List = this.S.ReturnGasFailedArray;\n    this.GasFailed_List.map(x => {\n      x.OldAio = undefined;\n      x.NewAio = undefined;\n    });\n    console.log(this.GasFailed_List);\n  }\n\n  Check_oldAIO() {\n    if (this.StopMouseEnterAlarm == false) alert(\"pls verify old Ai/o Value == New Ai/o \");\n    this.StopMouseEnterAlarm = true;\n  }\n\n  Calc_NewAio(val, name) {\n    {\n      this.GasFailed_List.map(x => {\n        if (val != undefined && x.gasname == name) {\n          x.OldAio = val.target.value;\n          if (x.Ac != undefined && x.target != undefined && x.OldAio != undefined) x.NewAio = x.Ac / x.target * x.OldAio;\n        }\n      });\n    }\n  }\n\n  Next() {\n    this.S.ReturnGasFailedArray = this.GasFailed_List;\n    this.route.navigateByUrl(\"/Gas-After_Adj\");\n    this.S.ReturnGasAioArray = this.GasFailed_List;\n  }\n\n  Return_Back() {\n    this.route.navigateByUrl(\"/Gas-List\");\n  }\n\n  Save() {\n    this.IfSave = true;\n  }\n\n  ToCancel() {\n    this.IfSave = false;\n    this.ResumeToTask.name = undefined;\n    this.ResumeToTask.task = undefined;\n  }\n\n  ToSave() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.ResumeToTask.date = _this.dt;\n      _this.ResumeToTask.router = _this.route.url;\n\n      try {\n        const AddResume = yield _this.s.AddTaskToSaveResume(_this.ResumeToTask);\n        _this.IfSave = false;\n        _this.ResumeToTask.name = undefined;\n        _this.ResumeToTask.task = undefined;\n      } catch (ex) {\n        alert(ex.message);\n        _this.IfSave = false;\n      }\n    })();\n  }\n\n};\nGasfailedComponent = __decorate([Component({\n  selector: 'app-gasfailed',\n  templateUrl: './gasfailed.component.html',\n  styleUrls: ['./gasfailed.component.css'],\n  styles: []\n}), Injectable({\n  providedIn: 'root'\n})], GasfailedComponent);\nexport { GasfailedComponent };","map":{"version":3,"sources":["C:\\Users\\lior\\FInal_PRO Intel\\IntelProject\\src\\app\\components\\gasfailed\\gasfailed.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injectable, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OuterSubscriber } from 'rxjs/internal/OuterSubscriber';\nimport { GasModel } from 'src/app/Models/Gas_model';\nimport { Resume_model } from 'src/app/Models/Resume_model';\nimport { ModuleService } from 'src/app/Services/ModuleService';\n\n@Component({\n  selector: 'app-gasfailed',\n  templateUrl: './gasfailed.component.html',\n  styleUrls: ['./gasfailed.component.css']\n})\n@Injectable({\n  providedIn: 'root'\n})\nexport class GasfailedComponent implements OnInit {\n\n  public GasFailed_List:      GasModel[] = [];\n  public StopMouseEnterAlarm: boolean = false;\n  public IfSave = false;\n  public dt = new Date();\n  public ResumeToTask = new Resume_model();\n\n  constructor(public S: ModuleService,public Resume ,public route : Router) { }\n\n  ngOnInit(): void {\n    this.GasFailed_List = this.S.ReturnGasFailedArray;\n    this.GasFailed_List.map((x) => {\n      x.OldAio=undefined;\n      x.NewAio=undefined;\n    });\n    console.log(this.GasFailed_List);\n  }\n\n  Check_oldAIO()\n  {\n    if(this.StopMouseEnterAlarm == false)\n    alert(\"pls verify old Ai/o Value == New Ai/o \");\n     this.StopMouseEnterAlarm = true;\n  }\n\n  Calc_NewAio(val:any, name: any)\n  {\n      {\n         this.GasFailed_List.map((x) =>{\n           if(val != undefined &&  x.gasname == name)\n           {\n                 x.OldAio = val.target.value;\n              if(x.Ac != undefined && x.target != undefined && x.OldAio != undefined)\n                 x.NewAio = (x.Ac/x.target) * x.OldAio;        \n           }\n         });\n      }  \n  }\n\n  Next()\n  {\n   this.S.ReturnGasFailedArray = this.GasFailed_List;\n   this.route.navigateByUrl(\"/Gas-After_Adj\");\n   this.S.ReturnGasAioArray = this.GasFailed_List;\n  }\n\n  Return_Back()\n  {\n    this.route.navigateByUrl(\"/Gas-List\");\n  }\n\n  \n  Save()\n  {\n    this.IfSave = true;\n  }\n\n  ToCancel()\n  {\n    this.IfSave = false;\n    this.ResumeToTask.name = undefined;\n    this.ResumeToTask.task = undefined;\n  }\n\n  async ToSave()\n  {\n    this.ResumeToTask.date = this.dt;\n    this.ResumeToTask.router = this.route.url;\n  \n    try\n    {\n    const AddResume = await this.s.AddTaskToSaveResume(this.ResumeToTask);\n    this.IfSave = false;\n    this.ResumeToTask.name = undefined;\n    this.ResumeToTask.task = undefined;\n    }\n  \n    catch(ex: any)\n    {\n      alert(ex.message);\n      this.IfSave = false;   \n    }\n\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}