{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lior/FInal_PRO Intel/IntelProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { IfdeviationModel } from 'src/app/Models/IfdeviationModel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/ModuleService\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction GaslistComponent_tr_16_input_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 15);\n    i0.ɵɵlistener(\"change\", function GaslistComponent_tr_16_input_8_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const i_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.checkValueAC($event, i_r3.gasname);\n    })(\"input\", function GaslistComponent_tr_16_input_8_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.checkIfInvalid($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GaslistComponent_tr_16_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i_r3.status);\n  }\n}\n\nfunction GaslistComponent_tr_16_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 17);\n  }\n}\n\nfunction GaslistComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"input\", 10);\n    i0.ɵɵlistener(\"change\", function GaslistComponent_tr_16_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.checkBox($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtemplate(8, GaslistComponent_tr_16_input_8_Template, 1, 0, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 12);\n    i0.ɵɵtemplate(10, GaslistComponent_tr_16_div_10_Template, 2, 1, \"div\", 13);\n    i0.ɵɵtemplate(11, GaslistComponent_tr_16_div_11_Template, 1, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", i_r3.gasline);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r3.gasline);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r3.gasname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i_r3.Select);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.IfFailed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.IfPassed);\n  }\n}\n\nfunction GaslistComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Stop Work!!!\\nPlease Follow up on the table there is Gas status on: \\\"deviation update ENG\\\"\\n\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementStart(3, \"input\", 19);\n    i0.ɵɵlistener(\"click\", function GaslistComponent_div_17_div_1_Template_input_click_3_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.To_hide();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GaslistComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, GaslistComponent_div_17_div_1_Template, 4, 0, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.AlertIfdeviation);\n  }\n}\n\nfunction GaslistComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" All Gases Are in Limits Not Need Adj\\n\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementStart(3, \"input\", 19);\n    i0.ɵɵlistener(\"click\", function GaslistComponent_div_18_Template_input_click_3_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.To_hideIFpassed();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class GaslistComponent {\n  constructor(s, route) {\n    this.s = s;\n    this.route = route;\n    this.GasListModel = [];\n    this.ShowTool = this.s.ToolChoice;\n    this.FailedGases = [];\n    this.FillArrayIf_devation = [];\n    this.CheckIf_deviation = false;\n    this.checkIfAc_define = false;\n    this.AlertIfdeviation = false;\n    this.AlertIfAllPassed = false;\n    this.divOpen = false;\n    this.IfPassed = false;\n    this.IfFailed = false;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this.GasListModel = yield _this.s.GetDataPerTool(_this.ShowTool);\n      } catch (ex) {\n        alert(ex.message);\n      }\n    })();\n  }\n\n  checkBox(val) {\n    const gas_line = val.target.value;\n    const Is_check = val.target.checked;\n    this.GasListModel.map(d => {\n      if (d.gasline == gas_line) {\n        d.Select = Is_check;\n\n        if (d.Select == false) {\n          d.status = undefined;\n          d.Ac = undefined;\n        }\n\n        return;\n      }\n\n      return;\n    });\n  }\n\n  checkValueAC(val, name) {\n    this.GasListModel.map(gas => {\n      if (val != undefined && gas.gasname == name) {\n        gas.Ac = val.target.value;\n\n        if (gas.Ac != undefined && gas.lower_limit != undefined && gas.upper_limit != undefined && gas.Select == true) {\n          if (gas.Ac >= gas.upper_limit * 1.03 || gas.Ac <= gas.lower_limit * 0.97 && gas.Ac > 0 && this.checkIfAc_define == true) gas.status = \"deviation update ENG\";else if (gas.Ac >= gas.lower_limit && gas.Ac <= gas.upper_limit && this.checkIfAc_define == true) {\n            gas.status = \"Passed\";\n            this.IfPassed = true;\n            this.IfFailed = false;\n          } else if (gas.Select == true && this.checkIfAc_define == false) {\n            gas.Ac = undefined;\n            gas.status = undefined;\n          } else if (gas.Ac < gas.lower_limit || gas.Ac > gas.upper_limit && gas.Ac > 0 && this.checkIfAc_define == true) {\n            gas.status = \"Failed\";\n            this.IfFailed = true;\n            this.IfPassed = false;\n          } else gas.status = undefined;\n        }\n      }\n    });\n  }\n\n  CheckIf_Failed() {\n    this.CheckIf_deviation = false;\n    this.FailedGases = this.GasListModel.filter(x => {\n      return x.status == \"Failed\";\n    });\n  }\n\n  Filter() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let Check_FunArray = yield _this2.CheckIf_Failed();\n      _this2.FillArrayIf_devation = [];\n      let Select_Count = 0;\n      let Status_Passed_Count = 0;\n      let logic_Counter = 0;\n\n      _this2.GasListModel.map(gas => {\n        if (gas.Select == true) {\n          Select_Count++;\n          if (gas.status == \"Passed\") Status_Passed_Count++;\n\n          if (gas.status == \"deviation update ENG\") {\n            _this2.FillArrayIf_devation.push(new IfdeviationModel(gas.gasname));\n\n            _this2.CheckIf_deviation = true;\n          }\n\n          if (gas.Select == true && gas.status == undefined) logic_Counter++;\n        }\n      });\n\n      if (_this2.CheckIf_deviation == true) {\n        _this2.divOpen = true;\n        _this2.AlertIfAllPassed = false;\n        _this2.AlertIfdeviation = true;\n        return;\n      }\n\n      if (Select_Count == 0 || logic_Counter > 0) {\n        _this2.divOpen = false;\n        _this2.AlertIfAllPassed = false;\n        _this2.AlertIfdeviation = false;\n        return;\n      } else {\n        if (Select_Count == Status_Passed_Count) {\n          _this2.divOpen = true;\n          _this2.AlertIfdeviation = false;\n          _this2.AlertIfAllPassed = true;\n        } else {\n          _this2.AlertIfAllPassed = false;\n          _this2.AlertIfdeviation = false;\n          _this2.s.ReturnGasFailedArray = _this2.FailedGases;\n\n          _this2.route.navigateByUrl(\"/Gas-failed\");\n        }\n      }\n    })();\n  }\n\n  To_hideIFpassed() {\n    this.AlertIfdeviation = false;\n    this.AlertIfAllPassed = false;\n    this.divOpen = false;\n    this.route.navigateByUrl(\"/Home\");\n  }\n\n  checkIfInvalid(val) {\n    let check = val.target.value;\n\n    if (check.length == 0) {\n      this.checkIfAc_define = false;\n    } else this.checkIfAc_define = true;\n  }\n\n  To_hide() {\n    this.AlertIfdeviation = false;\n    this.AlertIfAllPassed = false;\n    this.divOpen = false;\n  }\n\n  Return_Back() {\n    this.route.navigateByUrl(\"/GAS-Adj\");\n  }\n\n}\n\nGaslistComponent.ɵfac = function GaslistComponent_Factory(t) {\n  return new (t || GaslistComponent)(i0.ɵɵdirectiveInject(i1.ModuleService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nGaslistComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GaslistComponent,\n  selectors: [[\"app-gaslist\"]],\n  decls: 34,\n  vars: 4,\n  consts: [[1, \"table\"], [1, \"AcResult\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"class\", \"deviaition\", 4, \"ngIf\"], [1, \"content\"], [1, \"buttons\"], [1, \"FILTER\", 3, \"disabled\", \"click\"], [1, \"Save\"], [1, \"Back\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"des-check\", 3, \"value\", \"change\"], [\"type\", \"number\", \"class\", \"AC\", \"placeholder\", \"Enter Ac Result...\", 3, \"change\", \"input\", 4, \"ngIf\"], [\"id\", \"statusChange\", 1, \"status\"], [\"class\", \"statusFailed\", 4, \"ngIf\"], [\"class\", \"statusPassed\", 4, \"ngIf\"], [\"type\", \"number\", \"placeholder\", \"Enter Ac Result...\", 1, \"AC\", 3, \"change\", \"input\"], [1, \"statusFailed\"], [1, \"statusPassed\"], [1, \"deviaition\"], [\"type\", \"button\", \"value\", \"OK\", 1, \"but_dev\", 3, \"click\"]],\n  template: function GaslistComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h2\");\n      i0.ɵɵtext(2, \"GAS LIST\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(3);\n      i0.ɵɵelementStart(4, \"table\");\n      i0.ɵɵelementStart(5, \"tr\");\n      i0.ɵɵelementStart(6, \"th\");\n      i0.ɵɵtext(7, \"Select\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Gas-Line\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Gas-Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 1);\n      i0.ɵɵtext(13, \"AC\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, GaslistComponent_tr_16_Template, 12, 6, \"tr\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, GaslistComponent_div_17_Template, 2, 1, \"div\", 3);\n      i0.ɵɵtemplate(18, GaslistComponent_div_18_Template, 4, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 5);\n      i0.ɵɵelementStart(20, \"h2\");\n      i0.ɵɵtext(21, \"Select Gas and Enter AC Result\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(22, \" 'FILTER' to get list failed Ac \");\n      i0.ɵɵelement(23, \"br\");\n      i0.ɵɵtext(24, \" 'SAVE' to continue later this step\");\n      i0.ɵɵelement(25, \"br\");\n      i0.ɵɵtext(26, \" 'BACK' to return\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 6);\n      i0.ɵɵelementStart(28, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function GaslistComponent_Template_button_click_28_listener() {\n        return ctx.Filter();\n      });\n      i0.ɵɵtext(29, \"FILTER\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 8);\n      i0.ɵɵtext(31, \"SAVE\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function GaslistComponent_Template_button_click_32_listener() {\n        return ctx.Return_Back();\n      });\n      i0.ɵɵtext(33, \"BACK\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.ShowTool, \" \");\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.GasListModel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.divOpen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.AlertIfAllPassed);\n    }\n  },\n  directives: [i3.NgForOf, i3.NgIf],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 118:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(134:1) C:\\\\\\\\Users\\\\\\\\lior\\\\\\\\FInal_PRO Intel\\\\\\\\IntelProject\\\\\\\\src\\\\\\\\app\\\\\\\\components\\\\\\\\gaslist\\\\\\\\gaslist.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 132 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 133 | \\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 134 | \\\\u001b[39m\\\\u001b[33m.statusPassed\\\\u001b[39m\\\\n \\\\u001b[90m     | \\\\u001b[39m\\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 135 | \\\\u001b[39m\\\\n \\\\u001b[90m 136 | \\\\u001b[39m\\\\u001b[90m })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[118]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=gaslist.component.css.map*/\"]\n});\nGaslistComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GaslistComponent,\n  factory: GaslistComponent.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\lior\\FInal_PRO Intel\\IntelProject\\src\\app\\components\\gaslist\\gaslist.component.ts","C:\\Users\\lior\\FInal_PRO Intel\\IntelProject\\src\\app\\components\\gaslist\\gaslist.component.html"],"names":[],"mappings":"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","sourcesContent":["import { NgSwitch, NgSwitchCase, NgSwitchDefault } from '@angular/common';\nimport { Component, Injectable, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GasModel } from 'src/app/Models/Gas_model';\nimport { IfdeviationModel } from 'src/app/Models/IfdeviationModel';\nimport { ModuleService } from 'src/app/Services/ModuleService';\n\n@Component({\n  selector: 'app-gaslist',\n  templateUrl: './gaslist.component.html',\n  styleUrls: ['./gaslist.component.css']\n})\n@Injectable({\n  providedIn: 'root'\n})\nexport class GaslistComponent implements OnInit {\n\n  public GasListModel:            GasModel  [] = [];\n  public ShowTool:                any =     this.s.ToolChoice;\n  public FailedGases:             GasModel  [] = [];\n  public FillArrayIf_devation:    IfdeviationModel [] = [];\n  public CheckIf_deviation : boolean = false;\n  public SaveAcIf_define   : any;\n  public checkIfAc_define=false;\n  public AlertIfdeviation = false;\n  public AlertIfAllPassed = false;\n  public divOpen = false;\n  public StatusValue: any\n  public IfPassed = false;\n  public IfFailed = false;\n\n  constructor(public s: ModuleService, public route: Router) { }\n\n  async ngOnInit() {\n    try\n     {\n     this.GasListModel = await this.s.GetDataPerTool(this.ShowTool);\n     }\n    catch (ex: any)\n    {\n        alert(ex.message);\n    }\n }\n\n checkBox(val: any)\n { \n  const gas_line = val.target.value\n  const Is_check = val.target.checked\n\n  this.GasListModel.map((d) =>{\n      if(d.gasline == gas_line)\n      {\n        d.Select = Is_check\n        if(d.Select == false)\n        {\n          d.status=undefined;\n          d.Ac = undefined;\n        }\n        return;\n      }\n       return;\n  })\n}\n\ncheckValueAC(val: any, name: any)\n{\n    this.GasListModel.map((gas) =>{\n      if(val != undefined  && gas.gasname == name)\n      {\n        gas.Ac = val.target.value;\n\n        if(gas.Ac != undefined && gas.lower_limit != undefined && gas.upper_limit != undefined && gas.Select==true)\n        {\n\n           if(gas.Ac >= gas.upper_limit * 1.03 || gas.Ac <= gas.lower_limit * 0.97 && gas.Ac > 0 && this.checkIfAc_define == true)\n              gas.status = \"deviation update ENG\"\n\n          else if(gas.Ac >= gas.lower_limit && gas.Ac <= gas.upper_limit && this.checkIfAc_define == true)\n          {\n                  gas.status = \"Passed\";  \n                  this.IfPassed = true;\n                  this.IfFailed = false;\n          }\n                  \n                  else if(gas.Select == true && this.checkIfAc_define == false)\n                  {\n                    gas.Ac     = undefined;\n                    gas.status = undefined;\n                  }\n\n            else if(gas.Ac < gas.lower_limit || gas.Ac > gas.upper_limit && gas.Ac>0  && this.checkIfAc_define == true )\n                  {\n                    gas.status = \"Failed\"; \n                    this.IfFailed = true;\n                    this.IfPassed = false;\n                  }   \n                   \n           \n                   \n           else\n                   gas.status = undefined;\n        }\n      }\n    });\n}\n\nCheckIf_Failed()\n{\n  this.CheckIf_deviation = false;\n  this.FailedGases = this.GasListModel.filter((x) => {\n    return x.status == \"Failed\";\n  });\n}\n\nasync Filter()\n{\n  let Check_FunArray = await this.CheckIf_Failed();\n    this.FillArrayIf_devation  = [];\n    let Select_Count           = 0;\n    let Status_Passed_Count    = 0;\n    let logic_Counter          = 0;\n\n    this.GasListModel.map((gas) => {\n      if(gas.Select == true)\n      {\n        Select_Count++;\n\n        if(gas.status == \"Passed\")\n            Status_Passed_Count++;\n\n        if(gas.status == \"deviation update ENG\")\n        {\n          this.FillArrayIf_devation.push (new IfdeviationModel(gas.gasname))\n          this.CheckIf_deviation = true;\n        }\n\n        if(gas.Select == true && gas.status == undefined)\n        logic_Counter++;\n      }       \n    });\n\n    if(this.CheckIf_deviation == true)\n    {\n      this.divOpen = true;\n      this.AlertIfAllPassed = false;\n      this.AlertIfdeviation = true;\n      return;\n    }\n\n    if(Select_Count==0 || logic_Counter > 0)\n    {\n      this.divOpen = false\n      this.AlertIfAllPassed = false;\n      this.AlertIfdeviation = false;\n      return;\n    } \n     \n    else\n    {\n      if(Select_Count == Status_Passed_Count)\n      {\n        this.divOpen = true;\n        this.AlertIfdeviation = false;\n        this.AlertIfAllPassed = true;\n      }\n  \n      else\n      {\n         this.AlertIfAllPassed = false;\n         this.AlertIfdeviation = false;\n         this.s.ReturnGasFailedArray=this.FailedGases;\n         this.route.navigateByUrl(\"/Gas-failed\");\n      }\n    }\n \n}\n\nTo_hideIFpassed()\n{\n  this.AlertIfdeviation=false;\n  this.AlertIfAllPassed = false;\n  this.divOpen = false;\n  this.route.navigateByUrl(\"/Home\")\n}\n\ncheckIfInvalid(val: any)\n{\n  let check = val.target.value\n  if(check.length == 0)\n  {\n    this.checkIfAc_define = false;  \n  }\n\n  else\n  this.checkIfAc_define = true;\n}\n\nTo_hide()\n{\n  this.AlertIfdeviation=false;\n  this.AlertIfAllPassed = false;\n  this.divOpen = false;\n}\n\nReturn_Back()\n{\n   this.route.navigateByUrl(\"/GAS-Adj\");\n}\n\n\n\n\n\n\n }\n\n\n  \n","<div class=\"table\">\r\n    <h2>GAS  LIST</h2>\r\n\r\n    {{ShowTool}}\r\n        <table>\r\n        <tr>\r\n            <th>Select</th>\r\n            <th>Gas-Line</th>\r\n            <th>Gas-Name</th>\r\n            <th class=\"AcResult\">AC</th>\r\n            <th>Status</th>\r\n        </tr>\r\n \r\n        <tr *ngFor=\"let i of GasListModel\">\r\n \r\n         <td><input\r\n              type=\"checkbox\"\r\n               class=\"des-check\"\r\n               [value]=\"i.gasline\"\r\n               (change)=\"checkBox($event)\" >\r\n         </td>\r\n         <td>{{i.gasline}}</td>\r\n         <td>{{i.gasname}}</td>\r\n             <td> \r\n                 <input type=\"number\" *ngIf=\"i.Select\"  class=\"AC\"  placeholder=\"Enter Ac Result...\"  (change)=\"checkValueAC($event, i.gasname)\"\r\n                 (input)=\"checkIfInvalid($event)\" >\r\n             </td>                      \r\n         <td class=\"status\" id=\"statusChange\">\r\n             <div *ngIf=\"IfFailed\" class=\"statusFailed\">{{i.status}}</div>\r\n             <div *ngIf=\"IfPassed\" class=\"statusPassed\"></div>\r\n            </td>\r\n        </tr>\r\n     </table>  \r\n<div *ngIf=\"divOpen\">\r\n\r\n    <div *ngIf=\"AlertIfdeviation\" class=\"deviaition\">\r\n                            Stop Work!!!\r\nPlease Follow up on the table there is Gas status on: \"deviation update ENG\"\r\n<br>\r\n<input type=\"button\" value=\"OK\" (click)=\"To_hide()\" class=\"but_dev\">\r\n</div>\r\n\r\n</div> \r\n\r\n<div *ngIf=\"AlertIfAllPassed\" class=\"deviaition\">\r\n                   All Gases Are in Limits Not Need Adj\r\n<br>\r\n<input type=\"button\" value=\"OK\" class=\"but_dev\" (click)=\"To_hideIFpassed()\">\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n\r\n <div class=\"content\">\r\n    <h2>Select Gas and Enter AC Result</h2>\r\n    'FILTER' to get list failed Ac <br />\r\n    'SAVE' to continue later this step<br />\r\n    'BACK' to return\r\n</div>\r\n\r\n<div class=\"buttons\">\r\n    <button class=\"FILTER\" [disabled]=\"\" (click)=\"Filter()\">FILTER</button>\r\n    <button class=\"Save\">SAVE</button>\r\n    <button class=\"Back\" (click)=\"Return_Back()\">BACK</button>\r\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}