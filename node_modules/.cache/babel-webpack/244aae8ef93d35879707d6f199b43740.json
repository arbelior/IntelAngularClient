{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lior/FInal_PRO Intel/IntelProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component, Injectable } from '@angular/core';\nimport { Module } from 'src/app/Models/Module';\nlet ModulesComponent = class ModulesComponent {\n  constructor(Service_Mod, router) {\n    this.Service_Mod = Service_Mod;\n    this.Allmodules = [];\n    this.modules = [];\n    this.Alltools = [];\n    this.ToolsPer_mod = [];\n  }\n\n  ngOnInit() {\n    this.GetAllModulesDistnict();\n    console.log(this.modules);\n  }\n\n  GetAllModulesDistnict() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.modules = [];\n      let count;\n\n      try {\n        _this.Allmodules = yield _this.Service_Mod.GetDataModelperMod();\n\n        _this.Allmodules.map(x => {\n          count = 0;\n\n          _this.modules.map(y => {\n            if (x.module == y.module) {\n              count++;\n            }\n          });\n\n          if (count == 0) _this.modules.push(new Module(undefined, x.module));\n        });\n      } catch (err) {\n        alert(err.message);\n      }\n    })();\n  }\n\n  GetToolsPerModules(val) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.ToolsPer_mod = [];\n      let count = 0;\n\n      try {\n        _this2.Alltools = yield _this2.Service_Mod.GetToolsPerModule(val);\n\n        _this2.Alltools.map(x => {\n          _this2.ToolsPer_mod.map(y => {\n            if (x.tool == y.tool) {\n              count++;\n            }\n          });\n\n          if (count == 0) {\n            _this2.ToolsPer_mod.push(new Module(x.tool));\n          }\n\n          count = 0;\n        });\n      } catch (err) {\n        alert(err.message);\n      }\n    })();\n  }\n\n  Return() {}\n\n};\nModulesComponent = __decorate([Injectable({\n  providedIn: 'root'\n}), Component({\n  selector: 'app-modules',\n  templateUrl: './modules.component.html',\n  styleUrls: ['./modules.component.css'],\n  styles: []\n})], ModulesComponent);\nexport { ModulesComponent };","map":{"version":3,"sources":["C:\\Users\\lior\\FInal_PRO Intel\\IntelProject\\src\\app\\components\\modules\\modules.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,EAAoB,UAApB,QAA8C,eAA9C;AACA,SAAS,MAAT,QAAuB,uBAAvB;AAWA,IAAa,gBAAgB,GAA7B,MAAa,gBAAb,CAA6B;AAS3B,EAAA,WAAA,CAAmB,WAAnB,EAAgD,MAAhD,EAA4D;AAAzC,SAAA,WAAA,GAAA,WAAA;AAPZ,SAAA,UAAA,GAAkC,EAAlC;AACA,SAAA,OAAA,GAAkC,EAAlC;AACA,SAAA,QAAA,GAAkC,EAAlC;AACA,SAAA,YAAA,GAAkC,EAAlC;AAI0D;;AAEjE,EAAA,QAAQ,GAAA;AACN,SAAK,qBAAL;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,OAAjB;AACD;;AAEM,EAAA,qBAAqB,GAAA;AAAA;;AAAA;AAEzB,MAAA,KAAI,CAAC,OAAL,GAAa,EAAb;AACA,UAAI,KAAJ;;AACA,UAAI;AACF,QAAA,KAAI,CAAC,UAAL,SAAwB,KAAI,CAAC,WAAL,CAAiB,kBAAjB,EAAxB;;AACA,QAAA,KAAI,CAAC,UAAL,CAAgB,GAAhB,CAAqB,CAAD,IAAM;AACxB,UAAA,KAAK,GAAC,CAAN;;AACA,UAAA,KAAI,CAAC,OAAL,CAAa,GAAb,CAAkB,CAAD,IAAM;AACrB,gBAAG,CAAC,CAAC,MAAF,IAAY,CAAC,CAAC,MAAjB,EACA;AACE,cAAA,KAAK;AACN;AACF,WALD;;AAMC,cAAG,KAAK,IAAI,CAAZ,EACD,KAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,IAAI,MAAJ,CAAW,SAAX,EAAqB,CAAC,CAAC,MAAvB,CAAlB;AACD,SAVD;AAWD,OAbD,CAcC,OAAO,GAAP,EAAiB;AAChB,QAAA,KAAK,CAAC,GAAG,CAAC,OAAL,CAAL;AACD;AApBwB;AAqB1B;;AAEK,EAAA,kBAAkB,CAAC,GAAD,EAAS;AAAA;;AAAA;AAE/B,MAAA,MAAI,CAAC,YAAL,GAAkB,EAAlB;AACA,UAAI,KAAK,GAAS,CAAlB;;AACA,UAAI;AACH,QAAA,MAAI,CAAC,QAAL,SAAsB,MAAI,CAAC,WAAL,CAAiB,iBAAjB,CAAmC,GAAnC,CAAtB;;AACA,QAAA,MAAI,CAAC,QAAL,CAAc,GAAd,CAAmB,CAAD,IAAK;AACvB,UAAA,MAAI,CAAC,YAAL,CAAkB,GAAlB,CAAuB,CAAD,IAAM;AACxB,gBAAG,CAAC,CAAC,IAAF,IAAU,CAAC,CAAC,IAAf,EACA;AACE,cAAA,KAAK;AACN;AACF,WALH;;AAME,cAAG,KAAK,IAAI,CAAZ,EACF;AACE,YAAA,MAAI,CAAC,YAAL,CAAkB,IAAlB,CAAuB,IAAI,MAAJ,CAAW,CAAC,CAAC,IAAb,CAAvB;AACD;;AACC,UAAA,KAAK,GAAC,CAAN;AACD,SAZD;AAaA,OAfD,CAgBC,OAAO,GAAP,EAAiB;AAChB,QAAA,KAAK,CAAC,GAAG,CAAC,OAAL,CAAL;AACD;AAtB8B;AAwBhC;;AAED,EAAA,MAAM,GAAA,CAGL;;AApEyB,CAA7B;AAAa,gBAAgB,GAAA,UAAA,CAAA,CAR5B,UAAU,CAAC;AACV,EAAA,UAAU,EAAE;AADF,CAAD,CAQkB,EAL5B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,aADD;AAET,EAAA,WAAW,EAAE,0BAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,yBAAD,CAHF;;AAAA,CAAD,CAKmB,CAAA,EAAhB,gBAAgB,CAAhB;SAAA,gB","sourcesContent":["import { Component, Injectable, OnInit } from '@angular/core';\nimport { Module } from 'src/app/Models/Module';\nimport { ModuleService } from 'src/app/Services/ModuleService';\n\n@Injectable({\n  providedIn: 'root'\n})\n@Component({\n  selector: 'app-modules',\n  templateUrl: './modules.component.html',\n  styleUrls: ['./modules.component.css']\n})\nexport class ModulesComponent implements OnInit {\n\n  public Allmodules        :   Module [] = [];\n  public modules           :   Module [] = [];\n  public Alltools          :   Module [] = [];\n  public ToolsPer_mod      :   Module [] = [];\n  public Module_Value:  any;\n  public selectedValue: any;\n\n  constructor(public Service_Mod : ModuleService, router: Rout) { }\n\n  ngOnInit(): void {\n    this.GetAllModulesDistnict();\n    console.log(this.modules);\n  }\n\n   async GetAllModulesDistnict()\n   {\n     this.modules=[];\n     let count:number;\n     try {\n       this.Allmodules = await this.Service_Mod.GetDataModelperMod();\n       this.Allmodules.map((x) =>{\n         count=0;\n         this.modules.map((y) =>{\n           if(x.module == y.module)\n           {\n             count++;\n           }           \n         });\n          if(count == 0)\n         this.modules.push(new Module(undefined,x.module));         \n       });\n     }\n      catch (err: any) {\n       alert(err.message);\n     }\n   }\n\n   async GetToolsPerModules(val: any)\n   { \n     this.ToolsPer_mod=[];  \n     let count: number=0;\n     try {\n      this.Alltools = await this.Service_Mod.GetToolsPerModule(val);\n      this.Alltools.map((x)=>{\n      this.ToolsPer_mod.map((y) =>{\n          if(x.tool == y.tool)\n          {\n            count++;\n          }\n        });\n        if(count == 0)\n      {\n        this.ToolsPer_mod.push(new Module(x.tool));\n      }\n        count=0;\n      });\n     }\n      catch (err: any) {\n       alert(err.message);\n     }\n     \n   }\n\n   Return()\n   {\n\n   }\n\n\n\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}