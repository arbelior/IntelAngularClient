{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lior/Final_PRO Intel/IntelProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Component, Injectable } from '@angular/core';\nimport { CommentModel } from 'src/app/Models/CommentModel';\nimport * as i0 from \"@angular/core\";\nexport class CommentsPageComponent {\n  constructor(Home, route, Service) {\n    this.Home = Home;\n    this.route = route;\n    this.Service = Service;\n    this.IfMessageSend = false;\n    this.SubjectsArray = [\"ENG\", \"PT\", \"MS\", \"Floater\", \"T.S_L3\"];\n    this.NewComment = new CommentModel();\n  }\n\n  ngOnInit() {\n    this.SubjectsArray;\n  }\n\n  Cancel() {\n    this.route.navigateByUrl(\"/Home\");\n  }\n\n  Send() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this.NewComment.subject = _this.selectedValue;\n        yield _this.Service.AddComment(_this.NewComment);\n\n        _this.MessageSendFun();\n      } catch (ex) {\n        alert(ex.message);\n      }\n    })();\n  }\n\n  MessageSendFun() {\n    this.IfMessageSend = true;\n    setTimeout(() => {\n      this.IfMessageSend = false;\n      this.route.navigateByUrl(\"/Home\");\n    }, 10000);\n  }\n\n  HideMessage() {\n    this.IfMessageSend = false;\n    this.route.navigateByUrl(\"/Home\");\n  }\n\n  Reset(comment) {\n    if (comment.length > 0) this.NewComment.comment = \"\";\n  }\n\n}\nCommentsPageComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommentsPageComponent,\n  factory: CommentsPageComponent.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\lior\\Final_PRO Intel\\IntelProject\\src\\app\\components\\comments-page\\comments-page.component.ts"],"names":[],"mappings":";AAAA,SAAS,SAAT,EAAoB,UAApB,QAA8C,eAA9C;AAEA,SAAS,YAAT,QAA6B,6BAA7B;;AAaA,OAAM,MAAO,qBAAP,CAA4B;AAOhC,EAAA,WAAA,CAAmB,IAAnB,EAA8C,KAA9C,EAAoE,OAApE,EAA2F;AAAxE,SAAA,IAAA,GAAA,IAAA;AAA2B,SAAA,KAAA,GAAA,KAAA;AAAsB,SAAA,OAAA,GAAA,OAAA;AAJ7D,SAAA,aAAA,GAAgB,KAAhB;AAEA,SAAA,aAAA,GAA0B,CAAC,KAAD,EAAO,IAAP,EAAY,IAAZ,EAAiB,SAAjB,EAA2B,QAA3B,CAA1B;AACA,SAAA,UAAA,GAAa,IAAI,YAAJ,EAAb;AACyF;;AAEhG,EAAA,QAAQ,GAAA;AACN,SAAK,aAAL;AACD;;AAED,EAAA,MAAM,GAAA;AAEJ,SAAK,KAAL,CAAW,aAAX,CAAyB,OAAzB;AACD;;AAEW,EAAA,IAAI,GAAA;AAAA;;AAAA;AAEd,UACA;AACA,QAAA,KAAI,CAAC,UAAL,CAAgB,OAAhB,GAA0B,KAAI,CAAC,aAA/B;AACA,cAAM,KAAI,CAAC,OAAL,CAAa,UAAb,CAAwB,KAAI,CAAC,UAA7B,CAAN;;AACA,QAAA,KAAI,CAAC,cAAL;AACC,OALD,CAMA,OAAM,EAAN,EACA;AACA,QAAA,KAAK,CAAC,EAAE,CAAC,OAAJ,CAAL;AACC;AAXa;AAYf;;AAEM,EAAA,cAAc,GAAA;AAEnB,SAAK,aAAL,GAAqB,IAArB;AACA,IAAA,UAAU,CAAE,MAAK;AACf,WAAK,aAAL,GAAqB,KAArB;AACA,WAAK,KAAL,CAAW,aAAX,CAAyB,OAAzB;AACD,KAHS,EAGR,KAHQ,CAAV;AAID;;AAED,EAAA,WAAW,GAAA;AAET,SAAK,aAAL,GAAqB,KAArB;AACA,SAAK,KAAL,CAAW,aAAX,CAAyB,OAAzB;AACD;;AAED,EAAA,KAAK,CAAC,OAAD,EAAgB;AAEnB,QAAG,OAAO,CAAC,MAAR,GAAiB,CAApB,EACA,KAAK,UAAL,CAAgB,OAAhB,GAAwB,EAAxB;AAED;;AApD+B;;SAArB,qB;AAAqB,EAAA,OAAA,EAArB,qBAAqB,CAAA,I;AAAA,EAAA,UAAA,EAFpB","sourcesContent":["import { Component, Injectable, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommentModel } from 'src/app/Models/CommentModel';\nimport { CommentsServer } from 'src/app/Services/CommentsServer';\nimport { HomeComponent } from '../home/home.component';\n\n\n@Component({\n  selector: 'app-comments-page',\n  templateUrl: './comments-page.component.html',\n  styleUrls: ['./comments-page.component.css']\n})\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsPageComponent implements OnInit {\n\n  public ShowName: any;\n  public IfMessageSend = false;\n  public selectedValue: any;\n  public SubjectsArray: string [] =[\"ENG\",\"PT\",\"MS\",\"Floater\",\"T.S_L3\"];\n  public NewComment = new CommentModel();\n  constructor(public Home: HomeComponent,public route: Router, public Service: CommentsServer) { }\n\n  ngOnInit(): void {\n    this.SubjectsArray;\n  }\n\n  Cancel()\n  {\n    this.route.navigateByUrl(\"/Home\");\n  }\n\n public async Send()\n  {\n    try\n    {\n    this.NewComment.subject = this.selectedValue;\n    await this.Service.AddComment(this.NewComment);\n    this.MessageSendFun();\n    }\n    catch(ex: any)\n    {\n    alert(ex.message);\n    }\n  }\n\n  public MessageSendFun()\n  {\n    this.IfMessageSend = true;\n    setTimeout (() =>{\n      this.IfMessageSend = false;\n      this.route.navigateByUrl(\"/Home\");\n    },10000)\n  }\n\n  HideMessage()\n  {\n    this.IfMessageSend = false;\n    this.route.navigateByUrl(\"/Home\");\n  }\n\n  Reset(comment: string)\n  {\n    if(comment.length > 0)\n    this.NewComment.comment=\"\";\n    \n  }\n\n}\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}