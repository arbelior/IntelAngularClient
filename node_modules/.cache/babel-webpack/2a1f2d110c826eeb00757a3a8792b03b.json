{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lior/FInal_PRO Intel/IntelProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Component, Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class GaslistComponent {\n  constructor(s) {\n    this.s = s;\n    this.GasListModel = [];\n    this.ShowTool = this.s.ToolChoice;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this.GasListModel = yield _this.s.GetDataPerTool(_this.ShowTool);\n      } catch (ex) {\n        alert(ex.message);\n      }\n    })();\n  }\n\n  checkBox(val) {\n    const gas_line = val.target.value;\n    const Is_check = val.target.checked;\n    this.GasListModel.map(d => {\n      if (d.gas_line == gas_line) {\n        d.Select = Is_check;\n\n        if (d.Select == false) {\n          d.status = undefined;\n          d.Ac = undefined;\n        }\n\n        return d;\n      }\n\n      return d;\n    });\n  }\n\n  checkValueAC(val, name) {}\n\n}\nGaslistComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GaslistComponent,\n  factory: GaslistComponent.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\lior\\FInal_PRO Intel\\IntelProject\\src\\app\\components\\gaslist\\gaslist.component.ts"],"names":[],"mappings":";AAAA,SAAS,SAAT,EAAoB,UAApB,QAA8C,eAA9C;;AAYA,OAAM,MAAO,gBAAP,CAAuB;AAM3B,EAAA,WAAA,CAAmB,CAAnB,EAAmC;AAAhB,SAAA,CAAA,GAAA,CAAA;AAJZ,SAAA,YAAA,GAA4B,EAA5B;AACA,SAAA,QAAA,GAAgB,KAAK,CAAL,CAAO,UAAvB;AAGiC;;AAElC,EAAA,QAAQ,GAAA;AAAA;;AAAA;AACZ,UACC;AACA,QAAA,KAAI,CAAC,YAAL,SAA0B,KAAI,CAAC,CAAL,CAAO,cAAP,CAAsB,KAAI,CAAC,QAA3B,CAA1B;AACC,OAHF,CAIA,OAAO,EAAP,EACA;AACI,QAAA,KAAK,CAAC,EAAE,CAAC,OAAJ,CAAL;AACH;AARW;AASd;;AAED,EAAA,QAAQ,CAAC,GAAD,EAAS;AAGhB,UAAM,QAAQ,GAAG,GAAG,CAAC,MAAJ,CAAW,KAA5B;AACA,UAAM,QAAQ,GAAG,GAAG,CAAC,MAAJ,CAAW,OAA5B;AAEA,SAAK,YAAL,CAAkB,GAAlB,CAAuB,CAAD,IAAM;AACxB,UAAG,CAAC,CAAC,QAAF,IAAc,QAAjB,EACA;AACE,QAAA,CAAC,CAAC,MAAF,GAAW,QAAX;;AAEA,YAAG,CAAC,CAAC,MAAF,IAAY,KAAf,EACA;AACE,UAAA,CAAC,CAAC,MAAF,GAAS,SAAT;AACA,UAAA,CAAC,CAAC,EAAF,GAAO,SAAP;AACD;;AAED,eAAO,CAAP;AACD;;AAEA,aAAO,CAAP;AACJ,KAfD;AAiBD;;AAED,EAAA,YAAY,CAAC,GAAD,EAAW,IAAX,EAAoB,CAG/B;;AA/C4B;;SAAhB,gB;AAAgB,EAAA,OAAA,EAAhB,gBAAgB,CAAA,I;AAAA,EAAA,UAAA,EAFf","sourcesContent":["import { Component, Injectable, OnInit } from '@angular/core';\nimport { GasModel } from 'src/app/Models/Gas_model';\nimport { ModuleService } from 'src/app/Services/ModuleService';\n\n@Component({\n  selector: 'app-gaslist',\n  templateUrl: './gaslist.component.html',\n  styleUrls: ['./gaslist.component.css']\n})\n@Injectable({\n  providedIn: 'root'\n})\nexport class GaslistComponent implements OnInit {\n\n  public GasListModel: GasModel [] = [];\n  public ShowTool: any = this.s.ToolChoice;\n  public checkVal: any;\n\n  constructor(public s: ModuleService) { }\n\n  async ngOnInit() {\n    try\n     {\n     this.GasListModel = await this.s.GetDataPerTool(this.ShowTool)\n     }\n    catch (ex: any)\n    {\n        alert(ex.message);\n    }\n }\n\n checkBox(val: any)\n {\n  \n  const gas_line = val.target.value\n  const Is_check = val.target.checked\n\n  this.GasListModel.map((d) =>{\n      if(d.gas_line == gas_line)\n      {\n        d.Select = Is_check\n\n        if(d.Select == false)\n        {\n          d.status=undefined;\n          d.Ac = undefined;\n        }\n\n        return d;\n      }\n\n       return d;\n  })\n\n}\n\ncheckValueAC(val: any, name: any)\n{\n\n}\n\n\n }\n\n\n  \n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}