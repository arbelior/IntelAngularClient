{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lior/FInal_PRO Intel/IntelProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Component, Injectable } from '@angular/core';\nimport { IfdeviationModel } from 'src/app/Models/IfdeviationModel';\nimport * as i0 from \"@angular/core\";\nexport class GasAfterAdjComponent {\n  constructor(s, route, GasFailed) {\n    this.s = s;\n    this.route = route;\n    this.GasFailed = GasFailed;\n    this.Gaslist_Failed_AfterAdj = [];\n    this.FailedGasesAfterAdj = [];\n    this.FillArrayIf_devation = [];\n    this.CheckIf_deviation = false;\n    this.AlertIfdeviation = false;\n  }\n\n  ngOnInit() {\n    this.Gaslist_Failed_AfterAdj = this.s.ReturnGasFailedArray;\n    this.Gaslist_Failed_AfterAdj.map(x => {\n      x.Ac = undefined;\n      x.status = undefined;\n    });\n  }\n\n  checkValueAC(val, name) {\n    this.Gaslist_Failed_AfterAdj.map(gas => {\n      if (val.target.value != undefined && gas.gasname == name) {\n        gas.Ac = val.target.value;\n\n        if (gas.Ac != undefined && gas.lower_limit != undefined && gas.upper_limit != undefined) {\n          if (gas.Ac >= gas.upper_limit * 1.03 || gas.Ac <= gas.lower_limit * 0.97 && gas.Ac > 0) gas.status = \"deviation update ENG\";else if (gas.Ac >= gas.lower_limit && gas.Ac <= gas.upper_limit) gas.status = \"Passed\";else if (gas.Ac < gas.lower_limit || gas.Ac > gas.upper_limit && gas.Ac > 0) gas.status = \"Failed\";else gas.status = undefined;\n        }\n      }\n    });\n  }\n\n  Return_Back() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.s.ReturnGasFailedArray = yield _this.s.ReturnGasFailedArrayIfback;\n\n      _this.GasFailed.ngOnInit();\n\n      _this.route.navigateByUrl(\"/Gas-failed\");\n    })();\n  }\n\n  CheckIf_Failed() {\n    this.CheckIf_deviation = false;\n    this.FailedGasesAfterAdj = this.Gaslist_Failed_AfterAdj.filter(x => {\n      return x.status == \"Failed\";\n    });\n  }\n\n  Filter() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let Check_FunArray = yield _this2.CheckIf_Failed();\n      _this2.FillArrayIf_devation = [];\n      let Select_Count = 0;\n      let Status_Passed_Count = 0;\n\n      _this2.Gaslist_Failed_AfterAdj.map(gas => {\n        if (gas.Select == true) {\n          Select_Count++;\n          if (gas.status == \"Passed\") Status_Passed_Count++;\n\n          if (gas.status == \"deviation update ENG\") {\n            _this2.FillArrayIf_devation.push(new IfdeviationModel(gas.gasname));\n\n            _this2.CheckIf_deviation = true;\n          }\n        }\n      });\n\n      if (_this2.CheckIf_deviation == true) {\n        _this2.AlertIfdeviation = true;\n        return;\n      } else {\n        if (Select_Count == Status_Passed_Count) {\n          alert(\"The AC results are founds in spec Limit Not need  adjust\");\n\n          _this2.route.navigateByUrl(\"/Home\");\n        } else {\n          _this2.s.ReturnGasFailedArray = _this2.FailedGasesAfterAdj;\n\n          _this2.route.navigateByUrl(\"/Gas-failed\");\n        }\n      }\n    })();\n  }\n\n  To_hide() {\n    this.AlertIfdeviation = false;\n  }\n\n}\nGasAfterAdjComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GasAfterAdjComponent,\n  factory: GasAfterAdjComponent.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\lior\\FInal_PRO Intel\\IntelProject\\src\\app\\components\\gas-after-adj\\gas-after-adj.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injectable, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { GasModel } from 'src/app/Models/Gas_model';\nimport { IfdeviationModel } from 'src/app/Models/IfdeviationModel';\nimport { ModuleService } from 'src/app/Services/ModuleService';\nimport { GasfailedComponent } from '../gasfailed/gasfailed.component';\n\n@Component({\n  selector: 'app-gas-after-adj',\n  templateUrl: './gas-after-adj.component.html',\n  styleUrls: ['./gas-after-adj.component.css']\n})\n@Injectable({\n  providedIn: 'root'\n})\nexport class GasAfterAdjComponent implements OnInit {\n\n  public Gaslist_Failed_AfterAdj  : GasModel         [] = [];\n  public FailedGasesAfterAdj      : GasModel         [] = [];\n  public FillArrayIf_devation     : IfdeviationModel [] = [];\n  public CheckIf_deviation        : boolean = false;\n  public AlertIfdeviation = false;\n\n  constructor(public s: ModuleService, public route: Router, public GasFailed: GasfailedComponent) { }\n\n  ngOnInit(): void {\n    this.Gaslist_Failed_AfterAdj = this.s.ReturnGasFailedArray\n    this.Gaslist_Failed_AfterAdj.map((x) => {\n      x.Ac= undefined;\n      x.status = undefined;\n    });\n  }\n\n  checkValueAC(val: any, name:  any)\n  {\n    this.Gaslist_Failed_AfterAdj.map((gas) => {\n      if(val.target.value != undefined && gas.gasname == name)\n      {\n        gas.Ac = val.target.value;\n\n        if(gas.Ac != undefined && gas.lower_limit != undefined && gas.upper_limit != undefined)\n        {\n        if(gas.Ac >= gas.upper_limit * 1.03 || gas.Ac <= gas.lower_limit * 0.97 && gas.Ac > 0)\n          gas.status = \"deviation update ENG\"\n\n        else if(gas.Ac >= gas.lower_limit && gas.Ac <= gas.upper_limit)\n              gas.status = \"Passed\";        \n\n        else if(gas.Ac < gas.lower_limit || gas.Ac > gas.upper_limit && gas.Ac>0)\n               gas.status = \"Failed\";      \n\n        else\n               gas.status = undefined;\n        }       \n      }\n    });\n  }\n\n async Return_Back()\n\n  {\n    this.s.ReturnGasFailedArray = await this.s.ReturnGasFailedArrayIfback;\n    this.GasFailed.ngOnInit();\n    this.route.navigateByUrl(\"/Gas-failed\");\n  }\n\n  CheckIf_Failed()\n{\n  this.CheckIf_deviation = false;\n  this.FailedGasesAfterAdj = this.Gaslist_Failed_AfterAdj.filter((x) => {\n    return x.status == \"Failed\";\n  });\n}\n\n \n\n  async Filter()\n{\n  let Check_FunArray = await this.CheckIf_Failed();\n    this.FillArrayIf_devation  = [];\n    let Select_Count           = 0;\n    let Status_Passed_Count    = 0;\n    \n\n    this.Gaslist_Failed_AfterAdj.map((gas) => {\n      if(gas.Select == true)\n      {\n        Select_Count++;\n\n        if(gas.status == \"Passed\")\n            Status_Passed_Count++;\n\n        if(gas.status == \"deviation update ENG\")\n        {\n          this.FillArrayIf_devation.push (new IfdeviationModel(gas.gasname))\n          this.CheckIf_deviation = true;\n        }\n      }       \n    });\n\n    if(this.CheckIf_deviation == true)\n    {\n      this.AlertIfdeviation = true;\n      return;\n    }\n    \n    else\n    {\n      if(Select_Count == Status_Passed_Count)\n      {\n        alert(\"The AC results are founds in spec Limit Not need  adjust\");\n        this.route.navigateByUrl(\"/Home\")\n      }\n  \n      else\n      {\n         this.s.ReturnGasFailedArray=this.FailedGasesAfterAdj;\n         this.route.navigateByUrl(\"/Gas-failed\");\n      }\n    }\n \n}\n\nTo_hide()\n{\n  this.AlertIfdeviation = false;\n}\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}